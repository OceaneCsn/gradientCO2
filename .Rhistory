draw_distributions(normalized_counts)
draw_PCA(normalized_counts)
DF <- 2
FDR <- 0.05
CO2 <- as.numeric(str_split_fixed(conditions, '\\.', 2)[,1])
CO2_spline <- ns(CO2, df = DF)
N <- str_split_fixed(conditions, '\\.', 2)[,2]
design <- model.matrix(~CO2_spline*N)
fit <- lmFit(normalized_counts, design) %>%
eBayes()
CO2_coeffs <- 2:(1+DF)
N_coeff <- DF+2
CO2_N_coeffs <- (DF+3):ncol(design)
DEGs_CO2 <- rownames(topTable(fit, coef=CO2_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000))
DEGs_N <- rownames(topTable(fit, coef=N_coeff,
adjust.method = "fdr",
p.value=FDR, number=20000))
DEGs_CO2_N <- rownames(topTable(fit, coef=CO2_N_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000))
genes <- sample(DEGs_CO2, 5)
draw_genes <- function(genes, normalized_counts, ncol=NULL){
reshape2::melt(normalized_counts[genes,] ,
quiet =T, value.name = "Expression") %>%
rename(gene = Var1, condition = Var2) %>%
separate(condition, into = c("CO2", "Nutrition", "rep")) %>%
mutate(CO2 = as.numeric(CO2)) %>%
ggplot(aes(x=CO2, y=Expression, color=Nutrition, fill = Nutrition)) +
geom_point() + geom_smooth(method = "lm", se = TRUE,
size = 1, alpha=0.1,
formula = y ~ splines::ns(x, df = DF)) +
facet_wrap(~gene, scales = 'free', ncol = ncol) +
theme_pubr() + scale_fill_brewer(palette="Accent")+
scale_color_brewer(palette="Accent")+
labs(title = "Normalized gene expression in CO2 gradient experiment",
subtitle = paste("Splines interpolation with DF=", DF))
}
draw_genes(genes, normalized_counts)
draw_clusters <- function(normalized_counts, genes, clustering){
reshape2::melt(normalized_counts[genes,],
quiet =T, value.name = "Expression") %>%
rename(gene = Var1, condition = Var2) %>%
separate(condition, into = c("CO2", "Nutrition", "rep")) %>%
mutate(CO2 = as.numeric(CO2),
cluster = clustering$membership[gene]) %>%
group_by(gene) %>%
mutate(Expression= (Expression-mean(Expression))/sd(Expression)) %>%
group_by(cluster, CO2, Nutrition, rep) %>%
mutate(N_genes = n()) %>%
unite(Cluster_label, cluster, N_genes, sep = ', N=') %>%
ggplot(aes(x=CO2, y=Expression, color=Nutrition, fill = Nutrition)) +
geom_point(alpha=0.01)+geom_smooth(method = "lm", se = TRUE,
size = 1, alpha=0.1,
formula = y ~ splines::ns(x, df = DF)) +
facet_wrap(~Cluster_label, scales = 'free', ncol = ncol) +
theme_pubr() +scale_fill_brewer(palette="Accent")+
scale_color_brewer(palette="Accent")+
labs(title = "Normalized clusters expression in CO2 gradient experiment",
subtitle = paste("Splines interpolation with DF=", DF))
}
draw_clusters(normalized_counts, DEGs_CO2,
run_coseq(conds = conditions, data = normalized_counts,
genes = DEGs_CO2, K = 6, transfo = "arcsin",
model = "Normal", seed = 123)) + ggtitle("C02 DEGs : clusters profiles")
knitr::kable(go)
bg <- convert_from_agi(rownames(normalized_counts))
bg <- convert_from_agi(rownames(normalized_counts))
entrez <- convert_from_agi(DEGs_CO2)
go <- enrich_go(entrez, bg)
go <- enrich_go(entrez, bg)
knitr::kable(go)
knitr::opts_chunk$set(echo = TRUE)
library(DIANE)
library(tidyverse)
library(corrplot)
library(patchwork)
library(splines)
library(limma)
library(ggpubr)
load('../rdata/expression_data_no_mismatch.rdata')
corrplot(cor(data), method = 'color')
tcc <- normalize(data, norm_method = 'tmm', iteration = FALSE)
conditions <- str_split_fixed(colnames(data), '_', 2)[,1]
tcc <- filter_low_counts(tcc, 10*length(conditions))
normalized_counts <- TCC::getNormalizedData(tcc)
draw_distributions(data) /
draw_distributions(normalized_counts)
draw_PCA(normalized_counts)
DT::datatable(topTable(fit, coef=CO2_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000), options = list(scrollX = TRUE))
DF <- 2
FDR <- 0.05
CO2 <- as.numeric(str_split_fixed(conditions, '\\.', 2)[,1])
CO2_spline <- ns(CO2, df = DF)
N <- str_split_fixed(conditions, '\\.', 2)[,2]
design <- model.matrix(~CO2_spline*N)
fit <- lmFit(normalized_counts, design) %>%
eBayes()
DT::datatable(topTable(fit, coef=CO2_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000), options = list(scrollX = TRUE))
CO2_coeffs <- 2:(1+DF)
N_coeff <- DF+2
CO2_N_coeffs <- (DF+3):ncol(design)
DT::datatable(topTable(fit, coef=CO2_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000), options = list(scrollX = TRUE))
annot <- gene_annotations$`Arabidopsis thaliana`
CO2_dea <- topTable(fit, coef=CO2_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000)
CO2_dea[c("label, annot")] <- annot[rownames(CO2_dea), ]
CO2_dea[c("label", "annot")] <- annot[rownames(CO2_dea), ]
DT::datatable(CO2_dea, options = list(scrollX = TRUE))
DEGs_CO2 <- rownames(topTable(fit, coef=CO2_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000))
DT::datatable(CO2_dea, options = list(scrollX = TRUE))
DT::datatable(CO2_dea, options = list(scrollX = TRUE)) %>%
DT::formatRound(colnames(CO2_dea))
CO2_dea <- topTable(fit, coef=CO2_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000)
annot[rownames(CO2_dea), ]
CO2_dea[c("label", "annot")] <- annot[rownames(CO2_dea), c("label", "description") ]
DT::datatable(CO2_dea, options = list(scrollX = TRUE)) %>%
DT::formatRound(colnames(CO2_dea))
rownames(CO2_dea)
annot[rownames(CO2_dea), c("label", "description") ]
CO2_dea <- topTable(fit, coef=CO2_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000)
CO2_dea[,c("label", "annot")] <- annot[rownames(CO2_dea), c("label", "description") ]
DT::datatable(CO2_dea, options = list(scrollX = TRUE)) %>%
DT::formatRound(colnames(CO2_dea))
CO2_dea <- topTable(fit, coef=CO2_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000)
CO2_dea[,c("label", "annot")] <- annot[rownames(CO2_dea), c("label", "description") ]
DT::datatable(CO2_dea[c("label", "annot", "adj.P.Value", "AveExpr")],
options = list(scrollX = TRUE))
CO2_dea[,c("label", "description")] <- annot[rownames(CO2_dea), c("label", "description") ]
DT::datatable(CO2_dea[c("label", "description", "adj.P.Value", "AveExpr")],
options = list(scrollX = TRUE))
CO2_dea
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr")],
options = list(scrollX = TRUE))
CO2_dea
CO2_dea$
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr")],
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr"),
digits = 4) %>%
DT::styleRows(list(CO2_dea$CO2_spline1 > 0 , CO2_dea$CO2_spline1 < 0 ),
c("#72F02466", c("#FF000035")))
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr"),
digits = 4) %>%
DT::styleRow(list(CO2_dea$CO2_spline1 > 0 , CO2_dea$CO2_spline1 < 0 ),
c("#72F02466", c("#FF000035")))
CO2_dea$CO2_spline1 > 0
which(CO2_dea$CO2_spline1 > 0)
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr"),
digits = 4) %>%
DT::styleRow(which(CO2_dea$CO2_spline1 > 0) ,
values = c("#72F02466"),default = "#FF000035")
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr"),
digits = 4) %>%
DT::styleRow(rows = which(CO2_dea$CO2_spline1 > 0) ,
values = c("#72F02466"),default = "#FF000035")
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr"),
digits = 4)
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr"),
digits = 4) %>%
DT::styleRow(rows = which(CO2_dea$CO2_spline1 > 0) ,
values = c("#72F02466"),default = "#FF000035")
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr"),
digits = 4) %>%
DT::styleRow(rows = CO2_dea$CO2_spline1 > 0 ,
values = c("#72F02466"),default = "#FF000035")
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr"),
digits = 4)
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1"),
digits = 4) %>%
DT::styleRow(rows = CO2_spline1 > 0 ,
values = c("#72F02466"),
default = "#FF000035")
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1"),
digits = 4)+
DT::styleRow(rows = CO2_spline1 > 0 ,
values = c("#72F02466"),
default = "#FF000035")
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1"),
digits = 4)+
DT::formatStyle(DT::styleRow(rows = CO2_spline1 > 0 ,
values = c("#72F02466"),
default = "#FF000035"))
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1"),
digits = 4)+
DT::formatStyle(DT::styleRow(rows = CO2_dea$CO2_spline1 > 0 ,
values = c("#72F02466"),
default = "#FF000035"))
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1"),
digits = 4)+
DT::formatStyle(DT::styleRow(rows = list(CO2_dea$CO2_spline1 > 0) ,
values = c("#72F02466"),
default = "#FF000035"))
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1"),
digits = 4)%>%
DT::formatStyle(
columns = c("CO2_spline1"),
target = c("cell", "row"),
backgroundColor = DT::styleValue()
)
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1"),
digits = 4)%>%
DT::formatStyle(
columns = c("CO2_spline1"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c(-1000000000, 0 , 1000000000))
)
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1"),
digits = 4)%>%
DT::formatStyle(
columns = c("CO2_spline1"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c(-1000000000, 0 , 1000000000), values = c("#72F02466", c("#FF000035")))
)
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1"),
digits = 4)%>%
DT::formatStyle(
columns = c("CO2_spline1"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c(-1000000000, 0 , 1000000000), values = c("#72F02466"), c("#FF000035")))
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1"),
digits = 4)%>%
DT::formatStyle(
columns = c("CO2_spline1"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c(-1000000000, 0 , 1000000000),
values = c("#72F02466", "#FF000035")))
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1"),
digits = 4)%>%
DT::formatStyle(
columns = c("CO2_spline1"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c( 0 ),
values = c("#72F02466", "#FF000035")))
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1"),
digits = 4)%>%
DT::formatStyle(
columns = c("CO2_spline1"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c( 0 ),
values = c("#FF000035", "#72F02466")))
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1", "CO2_spline2")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1",  "CO2_spline2"),
digits = 4)%>%
DT::formatStyle(
columns = c("CO2_spline1"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c( 0 ),
values = c("#FF000035", "#72F02466")))%>%
DT::formatStyle(
columns = c("CO2_spline2"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c( 0 ),
values = c("#FF000035", "#72F02466")))
N_dea <- topTable(fit, coef=N_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000)
N_dea <- topTable(fit, coef=N_coeff,
adjust.method = "fdr",
p.value=FDR, number=20000)
N_dea[,c("label", "description")] <-
annot[rownames(N_dea), c("label", "description") ]
N_dea
DT::datatable(N_dea[c("label", "description", "adj.P.Val", "AveExpr", "logFC")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "logFC"),
digits = 4)%>%
DT::formatStyle(
columns = c("logFC"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c( 0 ),
values = c("#FF000035", "#72F02466")))
N_dea <- topTable(fit, coef=N_coeff,
adjust.method = "fdr",
p.value=FDR, number=20000)
N_dea[,c("label", "description")] <-
annot[rownames(N_dea), c("label", "description") ]
DT::datatable(N_dea[c("label", "description", "adj.P.Val", "AveExpr", "logFC")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "logFC"),
digits = 4)%>%
DT::formatStyle(
columns = c("logFC"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c( 0 ),
values = c("#FF000035", "#72F02466")))
DEGs_N <- rownames(topTable(fit, coef=N_coeff,
adjust.method = "fdr",
p.value=FDR, number=20000))
CO2_N_dea <- topTable(fit, coef=CO2_N_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000)
CO2_N_dea <- topTable(fit, coef=CO2_N_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000)
CO2_N_dea[,c("label", "description")] <-
annot[rownames(CO2_N_dea), c("label", "description") ]
CO2_N_dea
DF <- 2
FDR <- 0.05
CO2 <- as.numeric(str_split_fixed(conditions, '\\.', 2)[,1])
CO2_spline <- ns(CO2, df = DF)
N <- str_split_fixed(conditions, '\\.', 2)[,2]
design <- model.matrix(~CO2_spline*N)
fit <- lmFit(normalized_counts, design) %>%
eBayes()
CO2_coeffs <- 2:(1+DF)
N_coeff <- DF+2
CO2_N_coeffs <- (DF+3):ncol(design)
annot <- gene_annotations$`Arabidopsis thaliana`
DEGs_N <- rownames(topTable(fit, coef=N_coeff,
adjust.method = "fdr",
p.value=FDR, number=20000))
DEGs_CO2_N <- rownames(topTable(fit, coef=CO2_N_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000))
length(DEGs_CO2)
length(DEGs_N)
length(DEGs_CO2_N)
CO2_dea <- topTable(fit, coef=CO2_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000)
CO2_dea[,c("label", "description")] <-
annot[rownames(CO2_dea), c("label", "description") ]
DT::datatable(CO2_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1", "CO2_spline2")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1",  "CO2_spline2"),
digits = 4)%>%
DT::formatStyle(
columns = c("CO2_spline1"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c( 0 ),
values = c("#FF000035", "#72F02466")))%>%
DT::formatStyle(
columns = c("CO2_spline2"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c( 0 ),
values = c("#FF000035", "#72F02466")))
DEGs_CO2 <- rownames(topTable(fit, coef=CO2_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000))
N_dea <- topTable(fit, coef=N_coeff,
adjust.method = "fdr",
p.value=FDR, number=20000)
N_dea[,c("label", "description")] <-
annot[rownames(N_dea), c("label", "description") ]
DT::datatable(N_dea[c("label", "description", "adj.P.Val", "AveExpr", "logFC")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "logFC"),
digits = 4)%>%
DT::formatStyle(
columns = c("logFC"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c( 0 ),
values = c("#FF000035", "#72F02466")))
DEGs_N <- rownames(topTable(fit, coef=N_coeff,
adjust.method = "fdr",
p.value=FDR, number=20000))
CO2_N_dea <- topTable(fit, coef=CO2_N_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000)
CO2_N_dea[,c("label", "description")] <-
annot[rownames(CO2_N_dea), c("label", "description") ]
DT::datatable(CO2_N_dea[c("label", "description", "adj.P.Val", "AveExpr", "CO2_spline1.NMix", "CO2_spline2.NMix")],
options = list(scrollX = TRUE)) %>%
DT::formatSignif(columns = c("adj.P.Val", "AveExpr",  "CO2_spline1.NMix", "CO2_spline2.NMix"),
digits = 4)%>%
DT::formatStyle(
columns = c("CO2_spline1.NMix"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c( 0 ),
values = c("#FF000035", "#72F02466")))%>%
DT::formatStyle(
columns = c("CO2_spline2.NMix"),
target = c("cell", "row"),
backgroundColor = DT::styleInterval(cuts = c( 0 ),
values = c("#FF000035", "#72F02466")))
DEGs_N_CO2 <- rownames(topTable(fit, coef=CO2_N_coeffs,
adjust.method = "fdr",
p.value=FDR, number=20000))
draw_venn(list(DEGs_CO2, DEGs_N, DEGs_CO2_N))
draw_venn(list("DEGs_CO2"=DEGs_CO2, "DEGs_N"=DEGs_N, "DEGs_CO2_N"=DEGs_CO2_N))
knitr::opts_chunk$set(echo = TRUE)
library(DIANE)
library(tidyverse)
library(corrplot)
library(patchwork)
library(splines)
library(limma)
library(ggpubr)
load('../rdata/expression_data_no_mismatch.rdata')
corrplot(cor(data), method = 'color')
tcc <- normalize(data, norm_method = 'tmm', iteration = FALSE)
conditions <- str_split_fixed(colnames(data), '_', 2)[,1]
tcc <- filter_low_counts(tcc, 10*length(conditions))
normalized_counts <- TCC::getNormalizedData(tcc)
draw_distributions(data) /
draw_distributions(normalized_counts)
draw_PCA(normalized_counts)
library(DESeq2)
design <- model.matrix(~CO2_spline*N)
DF <- 2
FDR <- 0.05
CO2 <- as.numeric(str_split_fixed(conditions, '\\.', 2)[,1])
CO2_spline <- ns(CO2, df = DF)
N <- str_split_fixed(conditions, '\\.', 2)[,2]
design <- model.matrix(~CO2_spline*N)
design
DataFrame(factor(c("A","A","B","B")))
matrix(1:100,ncol=4)
CO2
data.frame("N" = N, "CO2" = CO2)
design
N
DESeqDataSetFromMatrix(countData = normalized_counts, data.frame("N" = N, "CO2" = CO2), design = design)
DESeqDataSetFromMatrix(countData = data, data.frame("N" = N, "CO2" = CO2), design = design, )
dds <- DESeqDataSetFromMatrix(countData = data, data.frame("N" = N, "CO2" = CO2), design = design, )
DESeq(dds)
dds <- DESeqDataSetFromMatrix(countData = data[rowSums(data) > 400,], data.frame("N" = N, "CO2" = CO2), design = design, )
DESeq(dds)
dds <- DESeqDataSetFromMatrix(countData = data[rowSums(data) > 400,], data.frame("N" = N, "CO2" = CO2), design = design)
dds <- DESeq(dds)
results(dds)
dds$N
dds@design
results(dds, contrast = c(CO2_spline1))
results(dds, contrast = c("CO2_spline1"))
resultsNames(dds)
results(dds, contrast = 2)
resultsNames(dds)
dds <- DESeq(dds, test = "LRT")
dds <- DESeqDataSetFromMatrix(countData = data[rowSums(data) > 400,],
data.frame("N" = N, "CO2" = CO2),
design = design)
dds <- DESeqDataSetFromMatrix(countData = data[rowSums(data) > 400,],
data.frame("N" = N, "CO2" = CO2),
design = design)
dds <- DESeq(dds, test = "LRT")
dds <- DESeq(dds)
resultsNames(dds)
design
design <- model.matrix(~0+CO2_spline*N)
dds <- DESeqDataSetFromMatrix(countData = data[rowSums(data) > 400,],
data.frame("N" = N, "CO2" = CO2),
design = design)
dds <- DESeq(dds)
resultsNames(dds)
results(dds, contrast = c("CO2", "spline1", "spline2"))
resultsNames(dds)
results(dds, contrast = list(c("CO2_spline1", "CO2_spline2")))
results(dds, contrast = list(c("CO2_spline1")) )
s1 <- results(dds, contrast = list(c("CO2_spline1")) )
s1[s1$padj < 0.05,]
s1$padj
s1
View(s1)
